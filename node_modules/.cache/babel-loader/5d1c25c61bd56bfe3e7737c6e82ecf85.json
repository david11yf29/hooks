{"ast":null,"code":"var _jsxFileName = \"/Users/DoDoTea/Documents/GitHub/EXAMPLE/hooks/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-8a009.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: 'DELETE'\n    }).then(res => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients => prevIngredients.filter(ingredient => ingredient.id !== ingredientId));\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, error ? /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/DoDoTea/Documents/GitHub/EXAMPLE/hooks/src/components/Ingredients/Ingredients.js"],"names":["React","useReducer","useEffect","useCallback","IngredientForm","IngredientList","ErrorModal","Search","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","setUserIngredients","useState","isLoading","setIsLoading","error","setError","console","log","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevIngredients","name","removeIngredientHandler","ingredientId","res","catch","message","clearError"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient]\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Should not get there!')\n  }\n}\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(response => {\n        setIsLoading(false);\n        return response.json();\n      })\n      .then(responseData => {\n        setUserIngredients(prevIngredients => [\n          ...prevIngredients,\n          { id: responseData.name, ...ingredient }\n        ]);\n      });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-8a009.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: 'DELETE'\n    }).then(res => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients =>\n        prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n      );\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    })\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {\n        error ? <ErrorModal onClose={clearError}>{error}</ErrorModal> : null\n      }\n\n      <IngredientForm \n        onAddIngredient={addIngredientHandler}\n        loading={isLoading} />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientHandler}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}