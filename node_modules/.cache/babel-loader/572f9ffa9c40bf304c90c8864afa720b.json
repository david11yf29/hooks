{"ast":null,"code":"var _jsxFileName = \"/Users/DoDoTea/Documents/GitHub/EXAMPLE/hooks/src/components/Ingredients/Ingredients.js\";\nimport React, { useState, useEffect } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  useEffect(() => {\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json').then(res => {\n      return res.json();\n    }).then(resData => {\n      const loadedIngredients = [];\n\n      for (const key in resData) {\n        loadedIngredients.push({\n          id: key,\n          title: resData[key].title,\n          amount: resData[key].amount\n        });\n      }\n\n      setUserIngredients(loadedIngredients);\n    });\n  }, []); // ingredient = {}\n\n  const addIngredientHandler = ingredient => {\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient) // headers: {'Content-Type': 'application/json'}\n\n    }).then(res => {\n      return res.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/DoDoTea/Documents/GitHub/EXAMPLE/hooks/src/components/Ingredients/Ingredients.js"],"names":["React","useState","useEffect","IngredientForm","IngredientList","Search","Ingredients","userIngredients","setUserIngredients","fetch","then","res","json","resData","loadedIngredients","key","push","id","title","amount","addIngredientHandler","ingredient","method","body","JSON","stringify","responseData","prevIngredients","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,2DAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQG,OAAO,IAAI;AACf,YAAMC,iBAAiB,GAAG,EAA1B;;AACA,WAAK,MAAMC,GAAX,IAAkBF,OAAlB,EAA2B;AACzBC,QAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACrBC,UAAAA,EAAE,EAAEF,GADiB;AAErBG,UAAAA,KAAK,EAAEL,OAAO,CAACE,GAAD,CAAP,CAAaG,KAFC;AAGrBC,UAAAA,MAAM,EAAEN,OAAO,CAACE,GAAD,CAAP,CAAaI;AAHA,SAAvB;AAKD;;AACDX,MAAAA,kBAAkB,CAACM,iBAAD,CAAlB;AACD,KAdH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT,CAHwB,CAuBxB;;AACA,QAAMM,oBAAoB,GAAIC,UAAD,IAAgB;AAC3CZ,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AACjEa,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAF2D,CAGjE;;AAHiE,KAA9D,CAAL,CAKCX,IALD,CAKMC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAPD,EAQCF,IARD,CAQMgB,YAAY,IAAI;AACpBlB,MAAAA,kBAAkB,CAACmB,eAAe,IAAI,CACpC,GAAGA,eADiC,EAEpC;AAAEV,QAAAA,EAAE,EAAES,YAAY,CAACE,IAAnB;AAAyB,WAAGP;AAA5B,OAFoC,CAApB,CAAlB;AAID,KAbD;AAcD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,eAAe,EAAED,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,iBAAiB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEb,eAA7B;AAA8C,IAAA,YAAY,EAAE,MAAM,CAAE,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADF;AAUD,CAnDD;;AAqDA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n\n  useEffect(() => {\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json')\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        const loadedIngredients = [];\n        for (const key in resData) {\n          loadedIngredients.push({\n            id: key,\n            title: resData[key].title,\n            amount: resData[key].amount\n          })\n        }\n        setUserIngredients(loadedIngredients)\n      })\n  }, [])\n\n  \n\n  // ingredient = {}\n  const addIngredientHandler = (ingredient) => {\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      // headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(responseData => {\n      setUserIngredients(prevIngredients => [\n        ...prevIngredients,\n        { id: responseData.name, ...ingredient }\n      ]);\n    });\n  } \n\n  return (\n    <div className=\"App\">\n      <IngredientForm onAddIngredient={addIngredientHandler} />\n\n      <section>\n        <Search onLoadIngredients />\n        <IngredientList ingredients={userIngredients} onRemoveItem={() => {}} />\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}