{"ast":null,"code":"var _jsxFileName = \"/Users/DoDoTea/Documents/GitHub/EXAMPLE/hooks/src/components/Ingredients/Ingredients.js\";\nimport React, { useState } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]); // ingredient = {}\n\n  const addIngredientHandler = ingredient => {\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: Math.random().toString(),\n        ...ingredient\n      }]);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/DoDoTea/Documents/GitHub/EXAMPLE/hooks/src/components/Ingredients/Ingredients.js"],"names":["React","useState","IngredientForm","IngredientList","Search","Ingredients","userIngredients","setUserIngredients","addIngredientHandler","ingredient","fetch","method","body","JSON","stringify","headers","then","res","json","responseData","prevIngredients","id","Math","random","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD,CADwB,CAGxB;;AACA,QAAMO,oBAAoB,GAAIC,UAAD,IAAgB;AAC3CC,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAF2D;AAGjEM,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHwD,KAA9D,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAI;AACb,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAND,EAMGF,IANH,CAMQG,YAAY,IAAI;AACtBZ,MAAAA,kBAAkB,CAACa,eAAe,IAAI,CACpC,GAAGA,eADiC,EAEpC;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgC,WAAGf;AAAnC,OAFoC,CAApB,CAAlB;AAID,KAXD;AAYD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,eAAe,EAAED,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEF,eAA7B;AAA8C,IAAA,YAAY,EAAE,MAAM,CAAE,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADF;AAUD,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n\n  // ingredient = {}\n  const addIngredientHandler = (ingredient) => {\n    fetch('https://react-hooks-8a009.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {'Content-Type': 'application/json'}\n    }).then(res => {\n      return res.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [\n        ...prevIngredients,\n        { id: Math.random().toString(), ...ingredient }\n      ]);\n    });\n  } \n\n  return (\n    <div className=\"App\">\n      <IngredientForm onAddIngredient={addIngredientHandler} />\n\n      <section>\n        <Search />\n        <IngredientList ingredients={userIngredients} onRemoveItem={() => {}} />\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}